// Simple test server script
// This script creates a basic HTTP server to test if Node.js is working properly
// Run with: node simple-test-server.js

// Load the HTTP module
const http = require('http');
const os = require('os');

// Create HTTP server
const server = http.createServer((req, res) => {
  res.writeHead(200, {'Content-Type': 'text/html'});
  
  // Generate a simple HTML response
  const html = `
<!DOCTYPE html>
<html>
<head>
  <title>Node.js Test - Snap</title>
  <style>
    body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
    h1 { color: #3B82F6; }
    .result { background: #f0f0f0; padding: 15px; border-radius: 5px; margin: 20px 0; }
    table { border-collapse: collapse; width: 100%; }
    th, td { text-align: left; padding: 8px; border-bottom: 1px solid #ddd; }
    th { background-color: #f2f2f2; }
  </style>
</head>
<body>
  <h1>Node.js Environment Test</h1>
  <div class="result">
    <h2>Success! Node.js is working!</h2>
    <p>This page was generated by a Node.js server running on your host.</p>
  </div>
  
  <h2>Environment Information</h2>
  <table>
    <tr>
      <th>Item</th>
      <th>Value</th>
    </tr>
    <tr>
      <td>Node.js Version</td>
      <td>${process.version}</td>
    </tr>
    <tr>
      <td>Operating System</td>
      <td>${os.type()} ${os.release()}</td>
    </tr>
    <tr>
      <td>Platform</td>
      <td>${process.platform}</td>
    </tr>
    <tr>
      <td>Architecture</td>
      <td>${process.arch}</td>
    </tr>
    <tr>
      <td>Memory (Free/Total)</td>
      <td>${Math.round(os.freemem() / 1024 / 1024)} MB / ${Math.round(os.totalmem() / 1024 / 1024)} MB</td>
    </tr>
    <tr>
      <td>Hostname</td>
      <td>${os.hostname()}</td>
    </tr>
    <tr>
      <td>Current Directory</td>
      <td>${process.cwd()}</td>
    </tr>
  </table>
  
  <h2>Environment Variables</h2>
  <table>
    <tr>
      <th>Variable</th>
      <th>Value</th>
    </tr>
    <tr>
      <td>NODE_ENV</td>
      <td>${process.env.NODE_ENV || 'Not set'}</td>
    </tr>
    <tr>
      <td>PORT</td>
      <td>${process.env.PORT || '3000 (default)'}</td>
    </tr>
    <tr>
      <td>DB_HOST</td>
      <td>${process.env.DB_HOST || 'Not set'}</td>
    </tr>
    <tr>
      <td>DB_NAME</td>
      <td>${process.env.DB_NAME || 'Not set'}</td>
    </tr>
    <tr>
      <td>DB_USER</td>
      <td>${process.env.DB_USER || 'Not set'}</td>
    </tr>
    <tr>
      <td>DB_PASSWORD</td>
      <td>${process.env.DB_PASSWORD ? '******** (Set)' : 'Not set'}</td>
    </tr>
    <tr>
      <td>JWT_SECRET</td>
      <td>${process.env.JWT_SECRET ? '******** (Set)' : 'Not set'}</td>
    </tr>
  </table>
  
  <p style="margin-top: 40px; text-align: center; color: #666;">
    Generated on ${new Date().toISOString()}
  </p>
</body>
</html>
  `;
  
  res.end(html);
});

// Define port (use PORT environment variable or default to 3000)
const port = process.env.PORT || 3000;

// Start the server
server.listen(port, () => {
  console.log(`Server running at http://localhost:${port}/`);
  console.log('Press Ctrl+C to stop the server');
}); 